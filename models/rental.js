// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Rental = sequelize.define('rental', {
    rentalId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      defaultValue: Sequelize.literal('nextval(\'rental_rental_id_seq\'::regclass)'),
      allowNull: false,
    },
    rentalDate: {
      type: DataTypes.DATE,
      allowNull: false,
    },
    returnDate: {
      type: DataTypes.DATE,
    },
    lastUpdate: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
      allowNull: false,
    },
  }, {
    tableName: 'rental',
    underscored: true,
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Rental.associate = (models) => {
    Rental.belongsTo(models.customer, {
      foreignKey: {
        name: 'customerIdKey',
        field: 'customer_id',
      },
      targetKey: 'customerId',
      as: 'customer',
    });
    Rental.belongsTo(models.inventory, {
      foreignKey: {
        name: 'inventoryIdKey',
        field: 'inventory_id',
      },
      targetKey: 'inventoryId',
      as: 'inventory',
    });
    Rental.belongsTo(models.staff, {
      foreignKey: {
        name: 'staffIdKey',
        field: 'staff_id',
      },
      targetKey: 'staffId',
      as: 'staff',
    });
    Rental.hasMany(models.payment, {
      foreignKey: {
        name: 'rentalIdKey',
        field: 'rental_id',
      },
      sourceKey: 'rentalId',
      as: 'payments',
    });
  };

  return Rental;
};
